services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    networks:
      - docker-network

  elasticsearch:
    image: elastic/elasticsearch:9.1.3
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - docker-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: kibana:9.1.3
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    networks:
      - docker-network

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: always
    cap_add:
      - IPC_LOCK
    read_only: false
    environment:
      VAULT_ADDR: ${VAULT_ADDR}
      VAULT_API_ADDR: ${VAULT_API_ADDR}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    networks:
      - docker-network
    volumes:
      - ./vault/config:/vault/config
      - ./vault/data:/vault/data
      - ./vault/config/vault-sa.json:/vault/config/vault-sa.json
    command: vault server -config /vault/config/vault.hcl

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - docker-network

  backend:
    image: backendsearch:latest
    container_name: backendsearch
    restart: always
    command: uv run uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      - vault
      - redis
      - celery_gmail
      - celery_telegram
      - elasticsearch
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      VAULT_ADDR: ${VAULT_ADDR}
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
    ports:
      - "8000:8000"
    networks:
      - docker-network


  celery_gmail:
    image: backendsearch:latest
    container_name: celery_gmail
    restart: always
    command: uv run celery -A services.celery_config:celery_app worker --pool=threads --concurrency=10 -Q gmail_process --loglevel=info
    depends_on:
      - vault
      - redis
      - elasticsearch
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      VAULT_ADDR: ${VAULT_ADDR}
    networks:
      - docker-network

  celery_telegram:
    image: backendsearch:latest
    container_name: celery_telegram
    restart: always
    command: uv run celery -A services.celery_config:celery_app worker --pool=threads --concurrency=10 -Q telegram_process --loglevel=info
    depends_on:
      - vault
      - redis
      - elasticsearch
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      VAULT_ADDR: ${VAULT_ADDR}
    networks:
      - docker-network


networks:
  docker-network:
    external: true
